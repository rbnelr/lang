
//// Variable declarations
//l = 7; // error: unknown variable.
l :;

//l := 5; // error: variable already declared in this scope.
l = 4;

s := "blah";
println(s);

s = "foo";
println(s);

//// Math
c := -0 + 1;

a := +0;
a += 4 + c;

b := null;
//b = c = a;
//b += c += 2;

//// Escaped strings
printf("\\ \" ^{} {}\n", 5);

printf("a: {}  b: {}  c: {}\n", a, b, c);

-c; // ignored expression as statement
c = -c;
printf("c: {}\n", c);

println(1 * a - 2);

println(1 * 5 * 2);
println(1 - 5 * 2);

//// Post inc/decrement
h := 0;
printf("{} {} {} {} {} {}\n", h++, h++, h++, h--, h--, h);

printf("---------------\n");
k := 6;

// error: post inc/decrement can only operate on variables.
// (because after returned value of first increment is a rvalue)
//println(- - - k ++ ++);
println(- - - k ++);
println(k);

//// Empty statements (TODO: disallow?)
;
;;
{}
{;}

println("");

//// Scoped variables
printf("---------------\n");

{
	p := -3;
	printf("inner: {}\n", p);
}
//printf("outer: {}\n", p); // error: unknown variable.

printf("---------------\n");

p := -4;
printf("outer: {}\n", p);
{
	printf("inner: {}\n", p);
	p := -3;
	printf("inner: {}\n", p);
}
printf("outer: {}\n", p);

printf("---------------\n");

for i:=0; i<2; i++ {}
//printf("access i after loop: {}\n", i); // error: unknown variable.

//// Comparisons and booleans
printf("---------------\n");

//println(null + 1); // error: types do not match.
//println(null > 1); // error: types do not match.
//println(null + null); // error: can't do math with null.
//println(null > null); // error: null can't be larger or smaller.

printf("false             : {}\n", false          );
printf("true              : {}\n", true           );
printf("1 == 0            : {}\n", 1 == 0         );
printf("1 == 1            : {}\n", 1 == 1         );
printf("'helo' == 'hello' : {}\n", "a" == "hello" );
printf("'helo4' > 'helo3' : {}\n", "helo4" > "helo3"  );
printf("'helo' == null    : {}\n", "a" == null    );
printf("5 >= 5            : {}\n", 5 >= 5         );
printf("5 > 5             : {}\n", 5 > 5          );
printf("2>3 == 3>4        : {}\n", 2>3 == 3>4     );

printf("---------------\n");

{ //// ifs
	a := true;
	if a {
		printf("True!\n");
	} else {
		printf("False!\n");
	}

	a = !a;
	if a {
		printf("Now it's True!\n");
	} else {
		printf("Now it's False!\n");
	}
	
	printf("\n");

	b := -2;

	if b > 0 {
		printf("b is bigger than 0!\n");
	}
	elif b == 0 {
		printf("b is equal to 0!\n");
	}
	else /* b < 0 */ {
		printf("b is smaller than 0!\n");
		if a {
			printf("Still True!\n");
		} else {
			printf("Still False!\n");
		}
	}
}

printf("---------------\n");

{ //// ternary
	a := true;
	printf("a : {}\n", a?"True!":"False...");

	a = !a;
	printf("a : {}\n", a?"True!":"False...");
	
	f := false;
	t := true;
	printf("t=true f=false\n");
	printf("t? t?0:1 : t?2:3 = {}\n", t? t?0:1 : t?2:3);
	printf("t? f?0:1 : f?2:3 = {}\n", t? f?0:1 : t?2:3);
	printf("f? t?0:1 : t?2:3 = {}\n", f? t?0:1 : t?2:3);
	printf("f? f?0:1 : f?2:3 = {}\n", f? f?0:1 : f?2:3);
}


//// Loops
//for 10  error: '{' expected

//for "hello World" {}  error: int expected

printf("---------------\n");

for i:=0; i<10; i++ {
	
}

printf("---------------\n");

for i:=0; i<5*2; i++ {
	printf("foo ");
}

printf("\n");
printf("---------------\n");

for y:=0; y<4; y++ {
	for x:=0; x<4; x++ {
		printf("{}{} ", y,x);
	}
	printf("\n");
}

printf("---------------\n");

{
	printf("simple_loop:\n");
	start := timer();

	count := 0;
	for i:=0; i<10_000_000; i++ {
		count++;
	}
	
	dur := timer_end(start);
	printf("time: {} ms\n", dur * 1000.0);
}
