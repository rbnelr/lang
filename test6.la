
//test(3);
//
//func test (i : int) {
//	//i = 5; // error: cannot assign to a RValue.
//	j := i;
//	j++;
//	//7++; // error: cannot inc/decrement RValue.
//	//7 = 5; // error: cannot assign to a RValue.
//	//(j+1)++; // error: cannot inc/decrement RValue.
//
//	l := j++;
//	printf("{i} {i}\n", j,l);
//}

//a : A;
//
//a.a    = 5;
//a.flag = true;
//a.f    = 7.4;
//
//a.foo.b0 = false;
//a.foo.b1 = true;
//a.foo.b2 = true;
//
////a.g = 7.4; // error: struct member not found.
//
////jjj : JJJ; // error: unknown identifer.
//
//struct A {
//	a    : int;
//	flag : bool;
//	foo  : B;
//	f    : flt;
//}
//
//print(a);
//
//func print (a : A) {
//	printf("a: {i}  flag: {b} f: {f} -- {i}|{i}|{i}\n",
//		a.a, a.flag, a.f,
//		a.foo.b0 ?1:0,
//		a.foo.b1 ?1:0,
//		a.foo.b2 ?1:0);
//}
//
//a.a = -a.a;
//a.flag = !a.flag;
//
//a.foo.b1 = !a.foo.b1;
//
//print(a);
//
//struct B {
//	b0 : bool;
//	b1 : bool;
//	b2 : bool;
//}

a := 3;
b := 5;

//c := 5;
//a, b, c = b, a; // tuple assignment: cannot assign 2 values to 3 expressions.

//af := 5.0;
//a, b = b, af; // error: assignment: types do not match.

printf("{i}|{i}\n", a,b);

a, b = b, a;

printf("{i}|{i}\n", a,b);

// not allowed
//a, b += b, a;
//printf("{i}|{i}\n", a,b);


//struct Ret {
//	success : bool;
//	message : str;
//}
//func do_thing () = (ret : Ret) {
func do_thing () = (success : bool, message := "") {
	t := timer();

	success = t % 2 != 0;
	
	if !success {
		message = "bad luck";
	}
}

res := do_thing();

printf("Try 1: {s}: \"{s}\"\n",
	res.success ? "success!" : "error",
	res.message);

res = !res.success, "manual test";
	
printf("Test: {s}: \"{s}\"\n",
	res.success ? "success!" : "error",
	res.message);

succ : bool;
msg  : str;
succ, msg = do_thing();

printf("Try 2: {s}: \"{s}\"\n",
	succ ? "success!" : "error",
	msg);
